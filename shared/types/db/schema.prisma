// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = env("DB_OUTPUT_PATH")
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  discordId   String    @unique
  discordName String
  Session     Session[]

  riotEntitlement String?
  riotAuth        String?
  riotPuuid       String?
  riotTag         String?

  riotMatches RiotMatches[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model RiotMatches {
  id String @id

  users User[]

  mapId       String?
  gameVersion String?

  gameStart DateTime?
  gameEnd   DateTime?

  isCompleted Boolean?

  queueId  String?
  isRanked Boolean?

  seasonId String?

  rounds       RiotMatchRound[]
  roundsPlayed Int?

  teamWon           RiotMatchTeamColor?
  teamRedRoundsWon  Int?
  teamBlueRoundsWon Int?

  matchPlayers       RiotMatchPlayers[]
  riotMatchPlayersId String?
}

model RiotMatchRound {
  id            String @id @default(uuid())
  riotMatchesId String

  RiotMatches RiotMatches @relation(fields: [riotMatchesId], references: [id])
}

model RiotMatchPlayers {
  id String @id

  riotTag String?

  teamId      String?
  characterId String?

  kills   Int?
  deaths  Int?
  assists Int?

  tier Int?

  playerCard  String?
  playerTitle String?

  teamColor     RiotMatchTeamColor?
  teamWon       Boolean?
  teamRoundsWon Int?

  riotMatches RiotMatches[]
}

enum RiotMatchTeamColor {
  Red
  Blue
}
